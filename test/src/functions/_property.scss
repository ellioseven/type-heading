@include test-module('th-property') {

  @include test('[th-property] Return property from heading.') {
    $test: inspect(th-property($heading: h1, $property-name: font-size));
    $expect: inspect(0.55556em);
    @include assert-equal($test, $expect);
  }

  @include test('[th-property] Return property from heading with breakpoint.') {
    $test: inspect(th-property($heading: h1, $property-name: font-size, $breakpoint: 768px));
    $expect: inspect(2.77778em);
    @include assert-equal($test, $expect);
  }

  @include test('[th-property] Return default property from heading.') {
    $test: inspect(th-property($heading: h3, $property-name: margin-top));
    $expect: inspect(3px);
    @include assert-equal($test, $expect);
  }

  @include test('[th-property] Return default property from heading with breakpoint.') {
    $test: inspect(th-property($heading: h3, $property-name: margin-bottom, $breakpoint: 768px));
    $expect: inspect(0.22222rem);
    @include assert-equal($test, $expect);
  }

  @include test('[th-property] Return default from heading via keyword.') {
    $test: inspect(th-property($heading: h3, $property-name: margin-top));
    $expect: inspect(3px);
    @include assert-equal($test, $expect);
  }

  @include test('[th-property] Return property from heading and unit override to percent.') {
    $test: inspect(th-property($heading: h1, $property-name: font-size, $breakpoint: false, $convert: percent));
    $expect: inspect(55.55556%);
    @include assert-equal($test, $expect);
  }

  @include test('[th-property] Return property from heading and unit override to percent with base font size of 14px.') {
    $test: inspect(th-property($heading: h1, $property-name: font-size, $breakpoint: 768px, $convert: percent, $base-font-size: 14px));
    $expect: inspect(357.14286%);
    @include assert-equal($test, $expect);
  }

  @include test('[th-property] Return font size from heading.') {
    $test: inspect(th-property($property-name: font-size, $heading: h1));
    $expect: inspect(0.55556em);
    @include assert-equal($test, $expect);
  }

  @include test('[th-property] Return font size from heading with breakpoint.') {
    $test: inspect(th-property($property-name: font-size, $heading: h1, $breakpoint: 768px));
    $expect: inspect(2.77778em);
    @include assert-equal($test, $expect);
  }

  @include test('[th-property] Return font size from heading with a single value.') {
    $test: inspect(th-property($property-name: font-size, $heading: h6));
    $expect: inspect(0.27778em);
    @include assert-equal($test, $expect);
  }

  @include test('[th-property] Return line height from heading.') {
    $test: inspect(th-property($property-name: line-height, $heading: h1));
    $expect: inspect(2);
    @include assert-equal($test, $expect);
  }

  @include test('[th-property] Return line height from heading with breakpoint.') {
    $test: inspect(th-property($property-name: line-height, $heading: h1, $breakpoint: 768px));
    $expect: inspect(1.2);
    @include assert-equal($test, $expect);
  }

  @include test('[th-property] Return margin-top from heading.') {
    $test: inspect(th-property($property-name: margin-top, $heading: h1));
    $expect: inspect(30px);
    @include assert-equal($test, $expect);
  }

  @include test('[th-property] Return margin-top from heading with breakpoint.') {
    $test: inspect(th-property($property-name: margin-top, $heading: h1, $breakpoint: 768px));
    $expect: inspect(70px);
    @include assert-equal($test, $expect);
  }

  @include test('[th-property] Return margin-top from heading with single value.') {
    $test: inspect(th-property($property-name: margin-top, $heading: h2));
    $expect: inspect(29px);
    @include assert-equal($test, $expect);
  }

  @include test('[th-property] Return margin-bottom from heading.') {
    $test: inspect(th-property($property-name: margin-bottom, $heading: h1));
    $expect: inspect(2.22222rem);
    @include assert-equal($test, $expect);
  }

  @include test('[th-property] Return margin-bottom from heading with breakpoint.') {
    $test: inspect(th-property($property-name: margin-bottom, $heading: h1, $breakpoint: 768px));
    $expect: inspect(4.44444rem);
    @include assert-equal($test, $expect);
  }

  @include test('[th-property] Return margin-bottom from heading with single value.') {
    $test: inspect(th-property($property-name: margin-bottom, $heading: h2));
    $expect: inspect(1.61111rem);
    @include assert-equal($test, $expect);
  }

}

@include test-module('_th-property-get') {

  @include test('[_th-property-get] Return font size property value.') {
    $test: inspect(_th-property-get((10px 20px 30px), font-size));
    $expect: inspect(10px);
    @include assert-equal($test, $expect);
  }

  @include test('[_th-property-get] Return margin top property value.') {
    $test: inspect(_th-property-get((10px 20px (30px 40px)), margin-top));
    $expect: inspect(30px);
    @include assert-equal($test, $expect);
  }

  @include test('[_th-property-get] Return margin bottom property value.') {
    $test: inspect(_th-property-get((10px 20px (30px 40px)), margin-bottom));
    $expect: inspect(40px);
    @include assert-equal($test, $expect);
  }

  @include test('[_th-property-get] Return missing value.') {
    $test: inspect(_th-property-get((10px 20px), margin-bottom));
    $expect: inspect(false);
    @include assert-equal($test, $expect);
  }

  @include test('[_th-property-get] Return missing inner value.') {
    $test: inspect(_th-property-get((10px 20px 30px), margin-bottom));
    $expect: inspect(30px);
    @include assert-equal($test, $expect);
  }

}

@include test-module('_th-property-default') {

  @include test('[_th-property-default] Return default font size value.') {
    $test: inspect(_th-property-default(font-size));
    $expect: inspect(0.05556em);
    @include assert-equal($test, $expect);
  }

}

@include test-module('_th-property-default') {

  @include test('[_th-property-default] Return default font size value.') {
    $test: inspect(_th-property-default(font-size));
    $expect: inspect(0.05556em);
    @include assert-equal($test, $expect);
  }

}

@include test-module('_th-property-unit-convert-property') {

  @include test('[_th-property-unit-convert-property] Convert 10px font size to em.') {
    $test: inspect(_th-property-unit-convert-property(font-size, 10px));
    $expect: inspect(0.55556em);
    @include assert-equal($test, $expect);
  }

  @include test('[_th-property-unit-convert-property] Convert 10px font size with base font size of 20px.') {
    $test: inspect(_th-property-unit-convert-property(font-size, 10px, 20px));
    $expect: inspect(0.5em);
    @include assert-equal($test, $expect);
  }

}
