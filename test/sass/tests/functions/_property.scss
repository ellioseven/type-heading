// Tests / Functions / Property

// th-property()
// ------------------------------

function th-property {

	@include th-assert(
		$describe: "Return property from heading"
	){
		@include th-assert-expect {
      result: 0.55556em;
		}
		@include th-assert-actual {
      result: th-property(h1, font-size);
		}
	}

	@include th-assert(
		$describe: "Return property from heading with breakpoint"
	){
		@include th-assert-expect {
      result: 2.77778em;
		}
		@include th-assert-actual {
      result: th-property(h1, font-size, 768px);
		}
	}

	@include th-assert(
		$describe: "Return default property from heading"
	){
		@include th-assert-expect {
      result: 3px;
		}
		@include th-assert-actual {
      result: th-property(h3, margin-top);
		}
	}

	@include th-assert(
		$describe: "Return default property from heading with breakpoint"
	){
		@include th-assert-expect {
      result: 0.22222rem;
		}
		@include th-assert-actual {
      result: th-property(h3, margin-bottom, 768px);
		}
	}

	@include th-assert(
		$describe: "Return default from heading via keyword"
	){
		@include th-assert-expect {
      result: 3px;
		}
		@include th-assert-actual {
      result: th-property(h3, margin-top);
		}
	}

	@include th-assert(
		$describe: "Return default from heading via missing value"
	){
		@include th-assert-expect {
      result: 0.11111;
		}
		@include th-assert-actual {
      result: th-property(h5, line-height);
		}
	}

}

// _th-property-get()
// ------------------------------

function _th-property-get {

	@include th-assert(
		$describe: "Return font size property value."
	){
		@include th-assert-expect {
      result: 10px;
		}
		@include th-assert-actual {
      result: _th-property-get((10px 20px 30px), font-size);
		}
	}

	@include th-assert(
		$describe: "Return margin top property value."
	){
		@include th-assert-expect {
      result: 30px;
		}
		@include th-assert-actual {
      result: _th-property-get((10px 20px (30px 40px)), margin-top);
		}
	}

	@include th-assert(
		$describe: "Return margin bottom property value."
	){
		@include th-assert-expect {
      result: 40px;
		}
		@include th-assert-actual {
      result: _th-property-get((10px 20px (30px 40px)), margin-bottom);
		}
	}

	@include th-assert(
		$describe: "Return missing value."
	){
		@include th-assert-expect {
      result: false;
		}
		@include th-assert-actual {
      result: _th-property-get((10px 20px), margin-bottom);
		}
	}

	@include th-assert(
		$describe: "Return missing inner value."
	){
		@include th-assert-expect {
      result: 30px;
		}
		@include th-assert-actual {
      result: _th-property-get((10px 20px 30px), margin-bottom);
		}
	}

}

// th-property-font-size()
// ------------------------------

function th-property-font-size {

	@include th-assert(
		$describe: "Return font size from heading"
	){
		@include th-assert-expect {
      result: 0.55556em;
		}
		@include th-assert-actual {
      result: th-property(h1, font-size);
		}
	}

	@include th-assert(
		$describe: "Return font size from heading with breakpoint"
	){
		@include th-assert-expect {
      result: 2.77778em;
		}
		@include th-assert-actual {
      result: th-property(h1, font-size, 768px);
		}
	}

	@include th-assert(
		$describe: "Return font size from heading with a single value"
	){
		@include th-assert-expect {
      result: 0.27778em;
		}
		@include th-assert-actual {
      result: th-property(h6, font-size);
		}
	}

}

// th-property-line-height()
// ------------------------------

function th-property-line-height {

	@include th-assert(
		$describe: "Return line height from heading"
	){
		@include th-assert-expect {
      result: 1.11111;
		}
		@include th-assert-actual {
      result: th-property(h1, line-height);
		}
	}

	@include th-assert(
		$describe: "Return line height from heading with breakpoint"
	){
		@include th-assert-expect {
      result: 3.33333;
		}
		@include th-assert-actual {
      result: th-property(h1, line-height, 768px);
		}
	}

}

// th-property-margin-top()
// ------------------------------

function th-property-margin-top {

	@include th-assert(
		$describe: "Return margin-top from heading"
	){
		@include th-assert-expect {
      result: 30px;
		}
		@include th-assert-actual {
      result: th-property(h1, margin-top);
		}
	}

	@include th-assert(
		$describe: "Return margin-top from heading with breakpoint"
	){
		@include th-assert-expect {
      result: 70px;
		}
		@include th-assert-actual {
      result: th-property(h1, margin-top, 768px);
		}
	}

	@include th-assert(
		$describe: "Return margin-top from heading with single value"
	){
		@include th-assert-expect {
      result: 29px;
		}
		@include th-assert-actual {
      result: th-property(h2, margin-top);
		}
	}

}

// th-property-margin-bottom()
// ------------------------------

function th-property-margin-bottom {

	@include th-assert(
		$describe: "Return margin-bottom from heading"
	){
		@include th-assert-expect {
      result: 2.22222rem;
		}
		@include th-assert-actual {
      result: th-property(h1, margin-bottom);
		}
	}

	@include th-assert(
		$describe: "Return margin-bottom from heading with breakpoint"
	){
		@include th-assert-expect {
      result: 4.44444rem;
		}
		@include th-assert-actual {
      result: th-property(h1, margin-bottom, 768px);
		}
	}

	@include th-assert(
		$describe: "Return margin-bottom from heading with single value"
	){
		@include th-assert-expect {
      result: 1.61111rem;
		}
		@include th-assert-actual {
      result: th-property(h2, margin-bottom);
		}
	}

}

// th-property-default()
// ------------------------------

function th-property-default {

	@include th-assert(
		$describe: "Return default font size value."
	){
		@include th-assert-expect {
      result: 0.05556em;
		}
		@include th-assert-actual {
      result: th-property-default(font-size);
		}
	}

}

// _th-property-unit-convert()
// ------------------------------

function _th-property-unit-convert {

  @include th-assert(
    $describe: "Convert 10px font size to em."
  ){
    @include th-assert-expect {
      result: 0.55556em;
    }
    @include th-assert-actual {
      result: _th-property-unit-convert(font-size, 10px);
    }
  }

  @include th-assert(
    $describe: "Convert 10px font size with base font size of 20px."
  ){
    @include th-assert-expect {
      result: 0.5em;
    }
    @include th-assert-actual {
      result: _th-property-unit-convert(font-size, 10px, 20px);
    }
  }

}