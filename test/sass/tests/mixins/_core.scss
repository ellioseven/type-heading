// Tests / Mixins / Core

// th-with-breakpoint()
// ------------------------------

mixin th-with-breakpoint {

  @include th-assert(
    $describe: "Return heading with a 768px breakpoint."
  ){
    @include th-assert-expect {
      result: 50px 60px 70px 80px 768px;
    }
    @include th-assert-actual {
      @include th-with-breakpoint(768px) {
        result: th-heading(h1);
      }
    }
  }

  @include th-assert(
    $describe: "Output font-size for a heading with a 768px breakpoint."
  ){
    @include th-assert-expect {
      font-size: 2.72222em;
    }
    @include th-assert-actual {
      @include th-with-breakpoint(768px) {
        @include th-property-font-size(h2);
      }
    }
  }

  @include th-assert(
    $describe: "Return font-size for a heading with a 768px breakpoint."
  ){
    @include th-assert-expect {
      result: 2.72222em;
    }
    @include th-assert-actual {
      @include th-with-breakpoint(768px) {
        result: th-property-font-size(h2);
      }
    }
  }

}

mixin th-with {

  @include th-assert(
    $describe: "Output font-size, line-height, margin-top and margin-bottom properties individually for a heading with breakpoints."
  ){
    @include th-assert-expect {
      margin-top: 30px;
      margin-bottom: 40px;
      font-size: 10px;
      line-height: 20px;
      @media (min-width: 768px) {
        margin-top: 70px;
        margin-bottom: 80px;
        font-size: 50px;
        line-height: 60px;
      }
      @media (min-width: 1024px) {
        margin-top: 110px;
        margin-bottom: 120px;
        font-size: 90px;
        line-height: 100px;
      }
    }
    @include th-assert-actual {
      @include th-with(h1) {
        margin-top: th-with-get(margin-top);
        margin-bottom: th-with-get(margin-bottom);
        font-size: th-with-get(font-size);
        line-height: th-with-get(line-height);
      }
    }
  }

  @include th-assert(
    $describe: "Output font-size, line-height, margin-top and margin-bottom properties individually for a heading with a single breakpoint."
  ){
    @include th-assert-expect {
      margin-top: 3px;
      margin-bottom: 4px;
      font-size: 5px;
      line-height: 2px;
    }
    @include th-assert-actual {
      @include th-with(h6) {
        margin-top: th-with-get(margin-top);
        margin-bottom: th-with-get(margin-bottom);
        font-size: th-with-get(font-size);
        line-height: th-with-get(line-height);
      }
    }
  }

  @include th-assert(
  $describe: "Output font-size, line-height, margin-top and margin-bottom properties individually for a heading with conversion and base-font-size of 14px."
  ){
    @include th-assert-expect {
      margin-top: 3px;
      margin-bottom: 0.16667rem;
      font-size: 0.35714em;
      line-height: 0.4;
    }
    @include th-assert-actual {
      @include th-with(
        $heading: h6,
        $convert: true,
        $base-font-size: 14px
      ){
        margin-top: th-with-get(margin-top);
        margin-bottom: th-with-get(margin-bottom);
        font-size: th-with-get(font-size);
        line-height: th-with-get(line-height);
      }
    }
  }

  @include th-assert(
    $describe: "Output font-size, line-height, margin-top and margin-bottom properties individually for a heading with breakpoints with conversion."
  ){
    @include th-assert-expect {
      margin-top: 30px;
      margin-bottom: 1.66667rem;
      font-size: 0.55556em;
      line-height: 2;
      @media (min-width: 768px) {
        margin-top: 70px;
        margin-bottom: 3.33333rem;
        font-size: 2.77778em;
        line-height: 1.2;
      }
      @media (min-width: 1024px) {
        margin-top: 110px;
        margin-bottom: 5rem;
        font-size: 5em;
        line-height: 1.11111;
      }
    }
    @include th-assert-actual {
      @include th-with(h1, true) {
        margin-top: th-with-get(margin-top);
        margin-bottom: th-with-get(margin-bottom);
        font-size: th-with-get(font-size);
        line-height: th-with-get(line-height);
      }
    }
  }

}