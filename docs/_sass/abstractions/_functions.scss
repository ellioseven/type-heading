// Functions

$base-font-size: 16px !default;
$base-line-height: 24px !default;
$base-vertical-margin: $base-line-height * .75 !default;

// Global
// ------------------------------

// strip-unit
// Remove a unit such as px or em from a number.
//
// @since 0.0.1
// @type Function
//
// @param {Number} $value The number to strip the unit from. 
//
// @returns {Number} The stripped number.
//
// @example scss Description.
// // strip-unit(30px)
// // // 30

@function strip-unit(
  $value
){
  @return $value / ($value * 0 + 1);
}

// em-to-px
// Calculates a px number from an em number.
//
// @since 0.0.1
// @type Function
//
// @param {Number} $value The em value to calculate from.
// @param {Number} $base ($base-font-size) The base font size to calculate the em.
//
// @returns {Number} The calculated px number.
//
// @example scss Calculate 2em to px.
// // em-to-px(2em, 16px);
// // // 32px

@function em-to-px(
  $value,
  $base: $base-font-size
){
  @return strip-unit($value) * strip-unit($base) * 1px;
}

// em-to
// Calculates an em number from a px number.
//
// @since 0.0.1
// @type Function
//
// @see {function} strip-unit
//
// @param {Number} $value The px value to calculate from.  
// @param {Number} $base ($base-font-size) The base font size to calculate the em.
//
// @returns {Number} The calculated em number.
//
// @example scss Calculate 32px to em.
// // em-to(32px, 16px)
// // // 2em

@function em-to(
  $value,
  $base: $base-font-size
){
  @if unit($base) == em { $base: em-to-px($base); }
  $value: strip-unit($value) / strip-unit($base) * 1em;
  @if ($value == 0em) { $value: 0; }
  @return $value;
}

// em
// Calculates a list of px numbers to em values.
//
// @since 0.0.1
// @type Function
//
// @see {function} em-to
// 
// @param {List | Number} $values List of numbers or single number.
// @param {Number} $base ($base-font-size) The base font size to calculate the em.
//
// @returns {List} A list of converted em values.
//
// @example scss Calculate from a list of values.
// // em(40px 30px 20px 10px, 16px)
// // // 2.5em 1.875em 1.25em 0.625em
// @example scss Calculate from a single value.
// // em(40px, 16px)
// // // 2.5em

@function em(
  $values,
  $base: $base-font-size
){
  $max: length($values);
  @if $max == 1 { @return em-to(nth($values, 1), $base); }
  $em-values: ();
  @for $i from 1 through $max {
    $em-values: append($em-values, em-to(nth($values, $i), $base));
  }
  @return $em-values;
}