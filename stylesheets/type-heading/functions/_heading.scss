// Heading
// 
// @group Functions / Heading
// @author Elliot Mitchum

// th-heading
// Return a heading list.
//
// @since 0.0.10
// @type function
//
// @requires {function} th-heading-get-map
// @requires {function} _th-heading-has-next
// @requires {function} _th-heading-get-next
// @requires {function} _th-core-global-breakpoint
//
// @param {list | string} $heading A heading map key or list (required).
// @param {number} $breakpoint A heading list breakpoint.
//
// @returns {list} A heading list.
//
// @example scss Return a heading list.
// // // h1: (10px 20px (30px 40px), 50px 60px (70px 80px) 768px)
// // th-heading(h1)
// // // 10px 20px (30px 40px)
// // @example scss Return a heading list with breakpoint.
// // // h1: (10px 20px (30px 40px), 50px 60px (70px 80px) 768px)
// // th-heading(h1, 768px)
// // // 50px 60px (70px 80px) 768px

@function th-heading(
  $heading,
  $breakpoint: false
){
  $_return: $heading;
  $breakpoint: _th-core-global-breakpoint($breakpoint);
  @if string == type-of($heading) {
    $_return: th-heading-get-map($heading);
    @if _th-heading-has-next($_return) {
      $_return: _th-heading-get-next($_return, $breakpoint);
    }
  }
  @return $_return;
}

// th-heading-get-map
// Return a heading map.
//
// @since 0.0.10
// @type function
//
// @param {string} $heading A heading map key (required).
//
// @returns {list} A heading map.
//
// @example scss Return h1 heading map.
// // // h1: (10px 20px (30px 40px), 50px 60px (70px 80px) 768px)
// // th-heading-get-map(h1)
// // // 10px 20px (30px 40px), 50px 60px (70px 80px) 768px

@function th-heading-get-map(
  $heading
){
  $_return: $heading;
  @if string == type-of($heading) and map-has-key($th-headings, $heading) {
    $_return: map-get($th-headings, $heading);
  }
  @return $_return;
}

// _th-heading-has-next
// Check a for multiple heading lists.
//
// @since 0.0.10
// @type function
// @access private
// 
// @requires {function} th-heading-get-map
//
// @param {list | string} $heading A heading map key or list (required).
//
// @returns {boolean} If heading map contains multiple lists.
//
// @example scss Check heading with next.
// // // h1: (10px 20px (30px 40px), 50px 60px (70px 80px) 768px)
// // _th-heading-has-next(h1)
// // // true
// @example scss Check heading without next.
// // // h5: (10px 20px (30px 40px))
// // _th-heading-has-next(h5)
// // // false

@function _th-heading-has-next(
  $heading
){
  $_return: false;
  $heading: th-heading-get-map($heading);
  @if list-separator($heading) == comma { 
    $_return: true; 
  }
  @return $_return;
}

// _th-heading-get-next
// Return a heading list by breakpoint.
//
// @since 0.0.10
// @type function
// @access private
//
// @requires {function} th-heading-get-map
// @requires {function} th-property
//
// @param {list | string} $heading A heading map key or list (required).
// @param {boolean | number} $breakpoint (false) A heading list breakpoint.
//
// @returns {list} Heading list.
//
// @example scss Return h1 heading map.
// // // h1: (10px 20px (30px 40px), 50px 60px (70px 80px) 768px)
// // _th-heading-get-next(h1, 768px)
// // // 50px 60px (70px 80px) 768px

@function _th-heading-get-next(
  $heading,
  $breakpoint: false
){
  $_return: $heading;
  $heading: th-heading-get-map($heading);
  @if $breakpoint {
    @each $heading-list in $heading {
      @if th-property(
        $heading: $heading-list,
        $property-name: breakpoint,
        $convert: false) == $breakpoint {
        $_return: $heading-list;
      }
    }
  } @else {
    $_return: nth($heading, 1);
  }
  @return $_return;
}