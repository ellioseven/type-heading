// Breakpoint
//
// @group Functions / Core
// @author Elliot Mitchum

// _th-core-global-breakpoint
// Allows breakpoint override for sections of code.
//
// @since 0.0.12
// @type Number
// @access private

$_th-core-global-breakpoint: false !default;

// Name
// Description.
//
// @todo Task to be done.
//
// @since 1.0.0
// @type Bool | String
// @access private
// @group helpers
//
// @throws Error related message.
//
// @link http://some.url Optional caption.
//
// @requires other-item
// @requires {mixin} other-item
// @requires $other-item
// @requires %other-item
//
// @param {List} $foo
// @param {List | String} $foo
// @param {List} $foo Description.
// @param {List} $foo (false) Description.
//
// @returns {List | String} Description.
//
// @example scss Description.
// // (example)
// // // (result)

$_th-core-with: false !default;

// _th-core-global-breakpoint
// Returns global breakpoint property.
//
// @since 0.0.12
// @type function
// @access private
// @group breakpoint
//
// @param {number} $breakpoint A heading list breakpoint (required).
//
// @returns {Number} The breakpoint parameter.
//
// @example scss Return $th-breakpoint-global parameter.
// // $breakpoint: _th-core-global-breakpoint($breakpoint);

@function _th-core-global-breakpoint(
  $breakpoint
){
  @if global-variable-exists('_th-core-global-breakpoint') and $_th-core-global-breakpoint {
    @return $_th-core-global-breakpoint;
  } @else {
    @return $breakpoint;
  }
}

// Name
// Description.
//
// @todo Task to be done.
//
// @since 1.0.0
// @type Bool | String
// @access private
// @group helpers
//
// @throws Error related message.
//
// @link http://some.url Optional caption.
//
// @requires other-item
// @requires {mixin} other-item
// @requires $other-item
// @requires %other-item
//
// @param {List} $foo
// @param {List | String} $foo
// @param {List} $foo Description.
// @param {List} $foo (false) Description.
//
// @returns {List | String} Description.
//
// @example scss Description.
// // (example)
// // // (result)

@function _th-core-get-base(
  $heading,
  $base-font-size: $th-base-font-size,
  $breakpoint: false
){
  $breakpoint: _th-core-global-breakpoint($breakpoint);
  $base: th-property-font-size(
    $heading: $heading,
    $breakpoint: $breakpoint,
    $base-font-size: $base-font-size,
    $convert: false
  );
  @return $base;
}

// Name
// Description.
//
// @todo Task to be done.
//
// @since 1.0.0
// @type Bool | String
// @access private
// @group helpers
//
// @throws Error related message.
//
// @link http://some.url Optional caption.
//
// @requires other-item
// @requires {mixin} other-item
// @requires $other-item
// @requires %other-item
//
// @param {List} $foo
// @param {List | String} $foo
// @param {List} $foo Description.
// @param {List} $foo (false) Description.
//
// @returns {List | String} Description.
//
// @example scss Description.
// // (example)
// // // (result)

@function th-with-get($property) {
  @if $_th-core-with {
    @return map-get($_th-core-with, $property);
  } @else {
    @warn "th-with is not set."
  }
}