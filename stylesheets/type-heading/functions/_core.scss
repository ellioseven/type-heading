////
/// Core
/// @group Core
////

//  $_th-core-breakpoint-context
/// Global breakpoint variable for various mixins and functions.
///
/// @since 0.0.12
/// @type Bool | Number
/// @access private

$_th-core-breakpoint-context: false !default;

//  $_th-core-with
/// Map of heading property values within a th-with loop.
///
/// @since 0.0.14
/// @see {function} th-with
/// @type Map
/// @access private

$_th-core-with: () !default;

//  $_th-core-properties
/// List of available heading property names.
///
/// @since 0.0.14
/// @type List
/// @access private

$_th-core-properties: (margin-top margin-bottom font-size line-height);

//  _th-core-breakpoint-context()
/// Return either contextual breakpoint if set or current breakpoint value.
///
/// @since 0.0.12
/// @return {number} Current or contextual breakpoint.
///
/// @param {number} $breakpoint - A heading breakpoint.

@function _th-core-breakpoint-context(
  $breakpoint
){
  @if global-variable-exists('_th-core-breakpoint-context') and $_th-core-breakpoint-context {
    @return $_th-core-breakpoint-context;
  } @else {
    @return $breakpoint;
  }
}

//  th-with-get()
/// Return a heading property value within a th-with loop.
///
/// @since 0.0.14
/// @see {mixin} th-with
/// @return {number} Heading property value.
///
/// @param {string} $property-name - Name of the heading property to return.
///
/// @example scss - Return font size from within a th-with loop.
///  @include th-with(h1) {
///    font-size: th-with-get(font-size);
///  }
///  // font-size: 18px;

@function th-with-get(
  $property-name
){
  @if $_th-core-with {
    @return map-get($_th-core-with, $property-name);
  }
}