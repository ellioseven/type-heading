// Breakpoint
//
// @group Functions / Core
// @author Elliot Mitchum

// _th-core-global-breakpoint
// Allows breakpoint override for sections of code.
//
// @since 0.0.12
// @type Number
// @access private

$_th-core-global-breakpoint: false !default;

// _th-core-with
// Map of available properties with a th-with loop.
//
// @since 0.0.14
// @type Map
// @access private

$_th-core-with: () !default;

// _th-core-global-breakpoint
// Returns global breakpoint property.
//
// @since 0.0.12
// @type function
// @access private
// @group breakpoint
//
// @param {number} $breakpoint A heading list breakpoint (required).
//
// @returns {Number} The breakpoint parameter.
//
// @example scss Return $th-breakpoint-global parameter.
// // $breakpoint: _th-core-global-breakpoint($breakpoint);

@function _th-core-global-breakpoint(
  $breakpoint
){
  @if global-variable-exists('_th-core-global-breakpoint') and $_th-core-global-breakpoint {
    @return $_th-core-global-breakpoint;
  } @else {
    @return $breakpoint;
  }
}

// _th-core-get-base
// Shortcut for retreiving a headings base font size without unit conversion.
//
// @since 0.0.14
// @type function
// @access private
//
// @requires {function} th-property-font-size
//
// @param {list | string} $heading A heading map key or list (required).
// @param {number} $base-font-size ($th-base-font-size) Font size used for relative calculations.
// @param {number} $breakpoint A heading list breakpoint.
//
// @returns {number} Unconverted heading font size.

@function _th-core-get-base(
  $heading,
  $base-font-size: $th-base-font-size,
  $breakpoint: false
){
  $base: th-property-font-size(
    $heading: $heading,
    $breakpoint: $breakpoint,
    $base-font-size: $base-font-size,
    $convert: false
  );
  @return $base;
}

// th-with-get
// Return a property value within a th-with loop.
//
// @since 0.0.14
// @type function
//
// @requires {variable} $_th-core-with
//
// @param {string} $property (font-size|line-height|margin-top|margin-bottom) The property value to return.
//
// @returns {number} The property value.
//
// @example scss Return font size from within a th-with loop.
// // @include th-with(h1) {
// //   font-size: th-with-get(font-size);
// // }

@function th-with-get(
  $property
){
  @if $_th-core-with {
    @return map-get($_th-core-with, $property);
  }
}